openapi: 3.0.3
info:
  title: 'API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://test.datime.com.br'
paths:
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - user
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - user
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'O campo value deve ser um endereço de e-mail válido.'
                  example: juston.swaniawski@example.org
                password:
                  type: string
                  description: ''
                  example: reiciendis
              required:
                - email
                - password
      security: []
  /api/v1/auth/logout:
    post:
      summary: ''
      operationId: postApiV1AuthLogout
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged out'
                properties:
                  message:
                    type: string
                    example: 'Logged out'
      tags:
        - Autenticação
  /api/v1/auth/me:
    get:
      summary: ''
      operationId: getApiV1AuthMe
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user: User
                  message: Sucesso!
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: string
                        example: User
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Autenticação
  /api/v1/auth/reset-password:
    post:
      summary: ''
      operationId: postApiV1AuthResetPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Senha alterada!'
                properties:
                  message:
                    type: string
                    example: 'Senha alterada!'
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'O campo value deve ter pelo menos 6 caracteres. O campo value não pode ser superior a 255 caracteres.'
                  example: 'D`COu+S33Ddr?3V:DXk'
                old_password:
                  type: string
                  description: 'O campo value deve ter pelo menos 6 caracteres. O campo value não pode ser superior a 255 caracteres.'
                  example: sgamjifuagqewcwluuzu
              required:
                - password
                - old_password
  /api/v1/auth/updateProfile:
    post:
      summary: ''
      operationId: postApiV1AuthUpdateProfile
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Perfil atualizado!'
                properties:
                  message:
                    type: string
                    example: 'Perfil atualizado!'
      tags:
        - Autenticação
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
  /api/v1/categorias-despesa:
    get:
      summary: ''
      operationId: getApiV1CategoriasDespesa
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_despesa
                  message: Sucesso!
                  current_page: 1
                  per_page: 15
                  total: 1
                properties:
                  data:
                    type: array
                    example:
                      - categoria_despesa
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Categorias de despesas'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1.'
                  example: 84
                per_page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1. O campo value não pode ser superior a 300.'
                  example: 21
                search:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: tlufwuattanrwbxxi
    post:
      summary: ''
      operationId: postApiV1CategoriasDespesa
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_despesa
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - categoria_despesa
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Categorias de despesas'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 100 caracteres.'
                  example: vhpeqbdgdqidtdkcu
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 1000 caracteres.'
                  example: zonkmg
              required:
                - nome
                - descricao
  '/api/v1/categorias-despesa/{categoriaDespesa_id}':
    put:
      summary: ''
      operationId: putApiV1CategoriasDespesaCategoriaDespesa_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_despesa
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - categoria_despesa
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Categorias de despesas'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 100 caracteres.'
                  example: lpcwcbnnsolohgsgcglcfbk
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 1000 caracteres.'
                  example: keuhq
              required:
                - nome
                - descricao
    parameters:
      -
        in: path
        name: categoriaDespesa_id
        description: 'The ID of the categoriaDespesa.'
        example: 9bfefb2a-da44-4462-bca8-09e4e4c81d53
        required: true
        schema:
          type: string
  /api/v1/categoria-eventos:
    get:
      summary: ''
      operationId: getApiV1CategoriaEventos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_eventos
                  message: Sucesso!
                  current_page: 1
                  per_page: 15
                  total: 1
                properties:
                  data:
                    type: array
                    example:
                      - categoria_eventos
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Categorias de eventos'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1.'
                  example: 24
                per_page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1. O campo value não pode ser superior a 300.'
                  example: 23
                search:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: eejqtugjw
      security: []
    post:
      summary: ''
      operationId: postApiV1CategoriaEventos
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_eventos
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - categoria_eventos
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Categorias de eventos'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 100 caracteres.'
                  example: ngizxoafijja
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 1000 caracteres.'
                  example: xqtkelknj
              required:
                - nome
                - descricao
  '/api/v1/categoria-eventos/{categoriaEvento_id}':
    get:
      summary: ''
      operationId: getApiV1CategoriaEventosCategoriaEvento_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_eventos
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - categoria_eventos
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Categorias de eventos'
      security: []
    put:
      summary: ''
      operationId: putApiV1CategoriaEventosCategoriaEvento_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - categoria_eventos
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - categoria_eventos
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Categorias de eventos'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 100 caracteres.'
                  example: spk
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 1000 caracteres.'
                  example: naj
              required:
                - nome
                - descricao
    parameters:
      -
        in: path
        name: categoriaEvento_id
        description: 'The ID of the categoriaEvento.'
        example: 9bfefb2b-7325-4c26-9648-158544b4523d
        required: true
        schema:
          type: string
  /api/v1/dict/cidades:
    get:
      summary: ''
      operationId: getApiV1DictCidades
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - evento
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - evento
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Dicionários
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: nihil
                per_page:
                  type: integer
                  description: ''
                  example: 11
                page:
                  type: integer
                  description: ''
                  example: 2
  /api/v1/eventos:
    get:
      summary: ''
      operationId: getApiV1Eventos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - evento
                  message: Sucesso!
                  current_page: 1
                  per_page: 15
                  total: 1
                properties:
                  data:
                    type: array
                    example:
                      - evento
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 1
      tags:
        - Eventos
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1.'
                  example: 53
                per_page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1. O campo value não pode ser superior a 300.'
                  example: 12
                search:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: ptdesivzbsv
                categoria_evento_id:
                  type: string
                  description: ''
                  example: null
      security: []
    post:
      summary: ''
      operationId: postApiV1Eventos
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - evento
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - evento
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Eventos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: iyhucmaqzms
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: bmxmzbjpfddudgzuhmzrawhvp
                data_inicio:
                  type: string
                  description: 'O campo value não é uma data válida.'
                  example: '2024-05-08T16:22:26'
                data_fim:
                  type: string
                  description: 'O campo value não é uma data válida. O campo value deve ser uma data posterior a <code>data_inicio</code>.'
                  example: '2070-06-21'
                modalidade:
                  type: string
                  description: ''
                  example: online
                  enum:
                    - presencial
                    - online
                    - hibrido
                endereco:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: wesloni
                cidade_id:
                  type: string
                  description: ''
                  example: null
                cep:
                  type: string
                  description: 'Must match the regex /\d{5}-\d{3}/.'
                  example: 35692-173
                link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://waters.com/'
                categoria_evento_id:
                  type: string
                  description: ''
                  example: null
              required:
                - nome
                - descricao
                - data_inicio
                - modalidade
  '/api/v1/eventos/{id}':
    get:
      summary: ''
      operationId: getApiV1EventosId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - evento
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - evento
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Eventos
      security: []
    put:
      summary: ''
      operationId: putApiV1EventosId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - evento
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - evento
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Eventos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: ''
                  example: null
                descricao:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: jfifwkkjrydpqqq
                data_inicio:
                  type: string
                  description: 'O campo value não é uma data válida.'
                  example: '2024-05-08T16:22:26'
                data_fim:
                  type: string
                  description: 'O campo value não é uma data válida. O campo value deve ser uma data posterior a <code>data_inicio</code>.'
                  example: '2042-03-17'
                online:
                  type: boolean
                  description: ''
                  example: false
                endereco:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: fjeuvkriyuoupkrvipyzzocql
                cidade_id:
                  type: string
                  description: ''
                  example: null
                cep:
                  type: string
                  description: 'Must match the regex /\d{5}-\d{3}/.'
                  example: 03056-313
                link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://www.ullrich.com/atque-facilis-et-repellat-ea-atque'
                categoria_evento_id:
                  type: string
                  description: ''
                  example: null
              required:
                - descricao
                - data_inicio
                - online
    delete:
      summary: ''
      operationId: deleteApiV1EventosId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Sucesso!
                properties:
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Eventos
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the evento.'
        example: 9bfefb2c-1bad-4914-b496-354dfa97b00a
        required: true
        schema:
          type: string
  /api/v1/manage/users:
    get:
      summary: ''
      operationId: getApiV1ManageUsers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - user
                  message: Sucesso!
                  current_page: 1
                  per_page: 15
                  total: 1
                properties:
                  data:
                    type: array
                    example:
                      - user
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Gerenciar Usuários'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1.'
                  example: 74
                per_page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1. O campo value não pode ser superior a 300.'
                  example: 8
                search:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: dhnzktpxwxvdtocto
    post:
      summary: ''
      operationId: postApiV1ManageUsers
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user: User
                  message: Sucesso!
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: string
                        example: User
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Gerenciar Usuários'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: zycpfwwkjvhxutywkkrkus
                email:
                  type: string
                  description: 'O campo value deve ser um endereço de e-mail válido.'
                  example: giovani.oconner@example.org
              required:
                - name
                - email
  '/api/v1/manage/users/{id}':
    get:
      summary: ''
      operationId: getApiV1ManageUsersId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - user
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - user
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Gerenciar Usuários'
    put:
      summary: ''
      operationId: putApiV1ManageUsersId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Sucesso!
                properties:
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Gerenciar Usuários'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                is_active:
                  type: boolean
                  description: ''
                  example: false
              required:
                - is_active
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 9bfefb28-3d69-424b-b9ce-b61df8c7a629
        required: true
        schema:
          type: string
  '/api/v1/manage/users/{user_id}/new-temp-password':
    post:
      summary: ''
      operationId: postApiV1ManageUsersUser_idNewTempPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Sucesso!
                properties:
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - 'Gerenciar Usuários'
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 9bfefb28-3d69-424b-b9ce-b61df8c7a629
        required: true
        schema:
          type: string
  /api/v1/inscricoes:
    post:
      summary: ''
      operationId: postApiV1Inscricoes
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - inscricao
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - inscricao
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Inscrições
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evento_id:
                  type: string
                  description: ''
                  example: reprehenderit
                nome:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: koizctwerljzhikms
                email:
                  type: string
                  description: ''
                  example: null
                cpf:
                  type: string
                  description: 'O campo value deve ter pelo menos 11 caracteres. O campo value não pode ser superior a 14 caracteres.'
                  example: rjoqy
              required:
                - evento_id
                - nome
                - cpf
      security: []
    get:
      summary: ''
      operationId: getApiV1Inscricoes
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - inscricao
                  message: Sucesso!
                  current_page: 1
                  per_page: 15
                  total: 1
                properties:
                  data:
                    type: array
                    example:
                      - inscricao
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 1
      tags:
        - Inscrições
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1.'
                  example: 35
                per_page:
                  type: integer
                  description: 'O campo value deve ser pelo menos 1. O campo value não pode ser superior a 300.'
                  example: 14
                search:
                  type: string
                  description: 'O campo value deve ter pelo menos 3 caracteres. O campo value não pode ser superior a 50 caracteres.'
                  example: vmoxedwpuhqfcwztrmt
  '/api/v1/inscricoes/{inscricao_id}':
    get:
      summary: ''
      operationId: getApiV1InscricoesInscricao_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - inscricao
                  message: Sucesso!
                properties:
                  data:
                    type: array
                    example:
                      - inscricao
                    items:
                      type: string
                  message:
                    type: string
                    example: Sucesso!
      tags:
        - Inscrições
    parameters:
      -
        in: path
        name: inscricao_id
        description: 'The ID of the inscricao.'
        example: 9bfefb3f-9cd2-45d0-88ba-7a5dded0fd7f
        required: true
        schema:
          type: string
tags:
  -
    name: Autenticação
    description: ''
  -
    name: 'Categorias de despesas'
    description: ''
  -
    name: 'Categorias de eventos'
    description: ''
  -
    name: Dicionários
    description: ''
  -
    name: Eventos
    description: ''
  -
    name: 'Gerenciar Usuários'
    description: ''
  -
    name: Inscrições
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
